server.port=8091
spring.application.name=syncserver

### mysql datasource
spring.datasource.url=jdbc:mysql://10.30.0.10:8066/oricmfuntest  
spring.datasource.username=root  
spring.datasource.password=ori18502800930  
spring.datasource.driver-class-name=com.mysql.jdbc.Driver  

### jpa
spring.jpa.database=mysql
spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=none
spring.jpa.hibernate.naming.implicit-strategy=org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyJpaImpl
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect 

### mongodb
spring.data.mongodb.uri=mongodb://10.30.0.143:20000/test

### redis
# \uFF08\u666E\u901A\u96C6\u7FA4\uFF0C\u4E0D\u4F7F\u7528\u5219\u4E0D\u7528\u5F00\u542F\uFF09\u5728\u7FA4\u96C6\u4E2D\u6267\u884C\u547D\u4EE4\u65F6\u8981\u9075\u5FAA\u7684\u6700\u5927\u91CD\u5B9A\u5411\u6570\u76EE\u3002
# spring.redis.cluster.max-redirects=
# \uFF08\u666E\u901A\u96C6\u7FA4\uFF0C\u4E0D\u4F7F\u7528\u5219\u4E0D\u7528\u5F00\u542F\uFF09\u4EE5\u9017\u53F7\u5206\u9694\u7684\u201C\u4E3B\u673A\uFF1A\u7AEF\u53E3\u201D\u5BF9\u5217\u8868\u8FDB\u884C\u5F15\u5BFC\u3002
# spring.redis.cluster.nodes=

# \uFF08\u54E8\u5175\u6A21\u5F0F\uFF0C\u4E0D\u4F7F\u7528\u5219\u4E0D\u7528\u5F00\u542F\uFF09Redis\u670D\u52A1\u5668\u7684\u540D\u79F0\u3002
# spring.redis.sentinel.master=
# \uFF08\u54E8\u5175\u6A21\u5F0F\uFF0C\u4E0D\u4F7F\u7528\u5219\u4E0D\u7528\u5F00\u542F\uFF09\u4E3B\u673A\uFF1A\u7AEF\u53E3\u5BF9\u7684\u9017\u53F7\u5206\u9694\u5217\u8868\u3002
# spring.redis.sentinel.nodes=
# \u8FDE\u63A5\u5DE5\u5382\u4F7F\u7528\u7684\u6570\u636E\u5E93\u7D22\u5F15\u3002
spring.redis.database=0
# \u8FDE\u63A5URL\uFF0C\u5C06\u8986\u76D6\u4E3B\u673A\uFF0C\u7AEF\u53E3\u548C\u5BC6\u7801\uFF08\u7528\u6237\u5C06\u88AB\u5FFD\u7565\uFF09\uFF0C\u4F8B\u5982\uFF1Aredis://user:password@example.com:6379
spring.redis.url=
# Redis\u670D\u52A1\u5668\u4E3B\u673A\u3002
spring.redis.host=10.30.0.17
# Redis\u670D\u52A1\u5668\u7AEF\u53E3\u3002
spring.redis.port=6379
# \u767B\u5F55redis\u670D\u52A1\u5668\u7684\u5BC6\u7801\u3002
spring.redis.password=jianglong
# \u542F\u7528SSL\u652F\u6301\u3002
spring.redis.ssl=false
# \u6C60\u5728\u7ED9\u5B9A\u65F6\u95F4\u53EF\u4EE5\u5206\u914D\u7684\u6700\u5927\u8FDE\u63A5\u6570\u3002\u4F7F\u7528\u8D1F\u503C\u65E0\u9650\u5236\u3002
spring.redis.pool.max-active=8
# \u6C60\u4E2D\u201C\u7A7A\u95F2\u201D\u8FDE\u63A5\u7684\u6700\u5927\u6570\u91CF\u3002\u4F7F\u7528\u8D1F\u503C\u8868\u793A\u65E0\u9650\u6570\u91CF\u7684\u7A7A\u95F2\u8FDE\u63A5\u3002
spring.redis.pool.max-idle=8
# \u8FDE\u63A5\u5206\u914D\u5728\u6C60\u88AB\u8017\u5C3D\u65F6\u629B\u51FA\u5F02\u5E38\u4E4B\u524D\u5E94\u8BE5\u963B\u585E\u7684\u6700\u957F\u65F6\u95F4\u91CF\uFF08\u4EE5\u6BEB\u79D2\u4E3A\u5355\u4F4D\uFF09\u3002\u4F7F\u7528\u8D1F\u503C\u53EF\u4EE5\u65E0\u9650\u671F\u5730\u963B\u6B62\u3002
spring.redis.pool.max-wait=-1
# \u76EE\u6807\u4E3A\u4FDD\u6301\u5728\u6C60\u4E2D\u7684\u6700\u5C0F\u7A7A\u95F2\u8FDE\u63A5\u6570\u3002\u8FD9\u4E2A\u8BBE\u7F6E\u53EA\u6709\u5728\u6B63\u9762\u7684\u60C5\u51B5\u4E0B\u624D\u6709\u6548\u679C\u3002
spring.redis.pool.min-idle=0
# \u4EE5\u6BEB\u79D2\u4E3A\u5355\u4F4D\u7684\u8FDE\u63A5\u8D85\u65F6\u3002
spring.redis.timeout=2000

### rocketmq
spring.rocketmq.namesrvaddr=127.0.0.1:9876